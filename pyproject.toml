[build-system]
requires = [
  "setuptools>=62.1",
  "setuptools_scm[toml]>=6.2",
  "wheel",]
build-backend = "setuptools.build_meta"

[project]
name = "chimerapy"
description = "CHIMERApy is a python implmentation of the CHIMERA coronal hole detection algorithm."
readme = "README.rst"
requires-python = ">=3.9"
license = { file = "licenses/LICENSE.rst", content-type = "text/plain" }
dependencies = [
    'sunpy[net,map]>=5.1.0',
    'mahotas>=1.4.0',
    'scikit-image',
    'opencv-python',
]
dynamic = ["version"]

[project.optional-dependencies]
tests = [
    "pytest",
    "pytest-doctestplus",
    "pytest-cov",
]
docs = [
    "sphinx",
    "sphinx-gallery",
    "sphinx-automodapi",
    "tomli; python_version <\"3.11\"",
]
dev = ["chimerapy[docs,tests]"]

[project.urls]
repository = "chimerapy.readthedocs.io"

[tool.setuptools]
zip-safe = false
include-package-data = true

[tool.setuptools.packages.find]

[tool.setuptools_scm]
write_to = "chimerapy/_version.py"

[tool.gilesbot]

  [tool.gilesbot.pull_requests]
  enabled = true

  [ tool.gilesbot.towncrier_changelog ]
  enabled = true
  verify_pr_number = true
  changelog_skip_label = "No Changelog Entry Needed"
  help_url = "https://github.com/TCDSolar/CHIMERApy/blob/main/changelog/README.rst"

  changelog_missing_long = "There isn't a changelog file in this pull request. Please add a changelog file to the `changelog/` directory following the instructions in the changelog [README](https://github.com/TCDSolar/CHIMERApy/blob/main/changelog/README.rst)."

  type_incorrect_long = "The changelog file you added is not one of the allowed types. Please use one of the types described in the changelog [README](https://github.com/TCDSolar/CHIMERApy/blob/main/changelog/README.rst)"

  number_incorrect_long = "The number in the changelog file you added does not match the number of this pull request. Please rename the file."

[tool.towncrier]
  package = "CHIMERApy"
  filename = "CHANGELOG.rst"
  directory = "changelog/"
  issue_format = "`#{issue} <https://github.com/TCDSolar/CHIMERApy/pull/{issue}>`__"

  [[tool.towncrier.type]]
  directory = "breaking"
  name = "Backwards Incompatible Changes"
  showcontent = true

  [[tool.towncrier.type]]
  directory = "api"
  name = "API Changes"
  showcontent = true

  [[tool.towncrier.type]]
  directory = "removal"
  name = "Deprecations and Removals"
  showcontent = true

  [[tool.towncrier.type]]
  directory = "feature"
  name = "Features"
  showcontent = true

  [[tool.towncrier.type]]
  directory = "bugfix"
  name = "Bug Fixes"
  showcontent = true

  [[tool.towncrier.type]]
  directory = "doc"
  name = "Improved Documentation"
  showcontent = true

  [[tool.towncrier.type]]
  directory = "trivial"
  name = "Trivial/Internal Changes"
  showcontent = true

[tool.pytest.ini_options]
testpaths = [
  "chimerapy",
  "docs",
]
norecursedirs = [
    'chimerapy/_dev',
    '.tox',
    'docs/_build',
    'docs/generated',
    ]
doctest_plus = "enabled"
text_file_format = "rst"
addopts = "--doctest-rst"

[tool.coverage.run]
omit = [
 "chimerapy/__init*",
 "chimerapy/conftest.py",
 "chimerapy/*setup_package*",
 "chimerapy/tests/*",
 "chimerapy/*/tests/*",
 "chimerapy/extern/*",
 "chimerapy/version*",
 "*/chimerapy/__init*",
 "*/chimerapy/conftest.py",
 "*/chimerapy/*setup_package*",
 "*/chimerapy/tests/*",
 "*/chimerapy/*/tests/*",
 "*/chimerapy/extern/*",
 "*/chimerapy/version*",
]

[tool.coverage.report]
exclude_lines = [
  # Have to re-enable the standard pragma
  "pragma: no cover",
  # Don't complain about packages we have installed
  "except ImportError",
  # Don't complain if tests don't hit assertions
  "raise AssertionError",
  "raise NotImplementedError",
  # Don't complain about script hooks
  "def main(.*):",
  # Ignore branches that don't pertain to this version of Python
  "pragma: py{ignore_python_version}",
  # Don't complain about IPython completion helper
  "def _ipython_key_completions_",
]

[tool.codespell]
skip = '*.fits,*.fts,*.header,*.json,*.xsh,*cache*,*egg*,*extern*,.git,.idea,.tox,_build,*truncated,*.svg,.asv_env,.history'
ignore-words-list = 'alog, nd, nin, ot, te, upto, afile, reord'
